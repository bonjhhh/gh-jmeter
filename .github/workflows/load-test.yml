name: Load Test Workflow

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  load-test:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"
      GITHUB_RUN_ID: ${{ github.run_id }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_SERVER_URL: ${{ github.server_url }}
      GITHUB_REF_NAME: ${{ github.ref_name }}
      GITHUB_SHA: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install JMeter 5.6.3
        run: |
          # Download and extract JMeter 5.6.3
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz
          
          # Check JMeter version
          ./apache-jmeter-5.6.3/bin/jmeter --version

      - name: Verify Test Plan exists
        run: |
          # Check if file exists and print directory structure
          ls -la
          echo "------"
          ls -la jmeter-load-tests/jmeter/tests/ || echo "Directory not found"
          echo "------"
          if [ -f "jmeter-load-tests/jmeter/tests/testPlan01.jmx" ]; then
            echo "Test plan found!"
          else
            echo "Test plan NOT found!"
            find . -name "testPlan01.jmx" || echo "Could not find test plan anywhere"
          fi

      - name: Run UI Load Test and Generate Report
        run: |
          # Create results directory if it doesn't exist
          mkdir -p jmeter-load-tests/jmeter/results
          
          # Run JMeter with path to your test plan
          ./apache-jmeter-5.6.3/bin/jmeter -n -t jmeter-load-tests/jmeter/tests/testPlan01.jmx \
            -l jmeter-load-tests/jmeter/results/testPlan01-results.jtl \
            -e -o jmeter-load-tests/jmeter/results/Test_Plan_01_A

      - name: Upload JMeter Results as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: |
            jmeter-load-tests/jmeter/results/testPlan01-results.jtl
            jmeter-load-tests/jmeter/results/Test_Plan_01_A/**

      - name: Test Slack Webhook Directly
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Testing webhook from curl"}' \
            $SLACK_WEBHOOK_URL
            
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: |
          npm install axios dotenv

      - name: Process and Report Results
        run: |
          cd jmeter-load-tests
          node scripts/report-to-slack.js